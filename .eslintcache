[{"/Users/yash/node_workspace/mern-presentation/mern-frontend/src/index.js":"1","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/App.js":"2","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/reportWebVitals.js":"3","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/serviceWorker.js":"4","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/ColorModeSwitcher.js":"5","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/graphql/index.js":"6","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/graphql/mutations.js":"7","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/graphql/queries.js":"8","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/client.js":"9","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/components/Header.js":"10","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/pages/Login.js":"11","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/pages/Home.js":"12","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/pages/Signup.js":"13","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/pages/Post.js":"14","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/pages/CreatePost.js":"15","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/components/PostItem.js":"16","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/components/AppContext.js":"17","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/components/Layout.js":"18","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/pages/EditPost.js":"19"},{"size":1651,"mtime":1609714966549,"results":"20","hashOfConfig":"21"},{"size":953,"mtime":1609770165044,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1609525194494,"results":"23","hashOfConfig":"21"},{"size":5081,"mtime":1609525194494,"results":"24","hashOfConfig":"21"},{"size":617,"mtime":1609525194492,"results":"25","hashOfConfig":"26"},{"size":54,"mtime":1609613432206,"results":"27","hashOfConfig":"21"},{"size":1049,"mtime":1609613414415,"results":"28","hashOfConfig":"21"},{"size":530,"mtime":1609768770287,"results":"29","hashOfConfig":"21"},{"size":891,"mtime":1609716221262,"results":"30","hashOfConfig":"21"},{"size":3220,"mtime":1609714926129,"results":"31","hashOfConfig":"21"},{"size":2466,"mtime":1609715050592,"results":"32","hashOfConfig":"21"},{"size":1731,"mtime":1609785884989,"results":"33","hashOfConfig":"21"},{"size":2155,"mtime":1609621009896,"results":"34","hashOfConfig":"21"},{"size":3481,"mtime":1609785615630,"results":"35","hashOfConfig":"21"},{"size":2467,"mtime":1609785542898,"results":"36","hashOfConfig":"21"},{"size":1246,"mtime":1609785804297,"results":"37","hashOfConfig":"21"},{"size":523,"mtime":1609712383678,"results":"38","hashOfConfig":"21"},{"size":761,"mtime":1609715085096,"results":"39","hashOfConfig":"21"},{"size":4550,"mtime":1609785606805,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"ww0d8q",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"8cy6cw",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"43"},"/Users/yash/node_workspace/mern-presentation/mern-frontend/src/index.js",[],["84","85"],"/Users/yash/node_workspace/mern-presentation/mern-frontend/src/App.js",[],"/Users/yash/node_workspace/mern-presentation/mern-frontend/src/reportWebVitals.js",[],"/Users/yash/node_workspace/mern-presentation/mern-frontend/src/serviceWorker.js",[],"/Users/yash/node_workspace/mern-presentation/mern-frontend/src/ColorModeSwitcher.js",[],["86","87"],"/Users/yash/node_workspace/mern-presentation/mern-frontend/src/graphql/index.js",[],"/Users/yash/node_workspace/mern-presentation/mern-frontend/src/graphql/mutations.js",[],"/Users/yash/node_workspace/mern-presentation/mern-frontend/src/graphql/queries.js",[],"/Users/yash/node_workspace/mern-presentation/mern-frontend/src/client.js",[],"/Users/yash/node_workspace/mern-presentation/mern-frontend/src/components/Header.js",["88","89"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { Link, useHistory } from 'react-router-dom'\nimport { Box, Heading, Flex, Button } from \"@chakra-ui/react\"\nimport { useCookies } from 'react-cookie'\nimport { AppContext } from \"./AppContext\"\n\n// Note: This code could be better, so I'd recommend you to understand how I solved and you could write yours better :)\nconst Header = props => {\n  const [show, setShow] = useState(false)\n  const history = useHistory()\n  const handleToggle = () => setShow(!show)\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [cookies, setCookie, removeCookie] = useCookies(['token'])\n  const { state, dispatch } = useContext(AppContext)\n\n  useEffect(() => {\n    if (state.user) {\n      setIsLoggedIn(true)\n    } else {\n      setIsLoggedIn(false)\n    }\n  }, [state, isLoggedIn])\n\n  const handleLogout = () => {\n    removeCookie('token')\n    dispatch({ type: 'SET_USER', data: undefined })\n    setTimeout(() => {\n      history.push('/')\n    }, 500)\n  }\n\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      padding=\"1.5rem\"\n      bg=\"teal.500\"\n      color=\"white\"\n      {...props}\n    >\n      <Link to=\"/\">\n        <Flex align=\"center\" mr={5}>\n          <Heading as=\"h1\" size=\"lg\" letterSpacing={\"-.1rem\"}>\n            Post Centre\n        </Heading>\n        </Flex>\n      </Link>\n      <Box display={{ md: \"none\" }} onClick={handleToggle}>\n        <svg\n          fill=\"white\"\n          width=\"12px\"\n          viewBox=\"0 0 20 20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <title>Menu</title>\n          <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n        </svg>\n      </Box>\n\n      <Box\n        display={{ sm: show ? \"block\" : \"none\", md: \"flex\" }}\n        width={{ sm: \"full\", md: \"auto\" }}\n        alignItems=\"center\"\n        flexGrow={1}>\n        <Link to='/'>\n          <Button colorScheme=\"teal\" mt={{ base: 4, md: 0 }} ml={2} display=\"block\">\n            Home\n        </Button>\n        </Link>\n        {isLoggedIn &&\n          <Link to='/post/create'>\n            <Button colorScheme=\"teal\" mt={{ base: 4, md: 0 }} mr={2} display=\"block\">\n              Create\n            </Button>\n          </Link>}\n      </Box>\n\n      {isLoggedIn ?\n        <Box\n          display={{ sm: show ? \"block\" : \"none\", md: \"flex\" }}\n          width={{ sm: \"full\", md: \"auto\" }}\n          mt={{ base: 4, md: 0 }}>\n          <Button colorScheme=\"teal\" onClick={handleLogout}>\n            Log Out\n          </Button>\n        </Box>\n        :\n        <>\n          <Box display={{ sm: show ? \"block\" : \"none\", md: \"flex\" }}\n            width={{ sm: \"full\", md: \"auto\" }}>\n            <Link to='/signup'>\n              <Button bg=\"transparent\" border=\"1px\" mr={4}>\n                Create account\n            </Button>\n            </Link>\n          </Box>\n          <Box display={{ sm: show ? \"block\" : \"none\", md: \"flex\" }}\n            width={{ sm: \"full\", md: \"auto\" }}>\n            <Link to='/login'>\n              <Button colorScheme=\"teal\">\n                Log In\n              </Button>\n            </Link>\n          </Box>\n        </>\n      }\n    </Flex>\n  )\n}\nexport default Header\n","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/pages/Login.js",["90"],"import React, { useState } from 'react'\nimport { Box, Button, Flex, FormControl, FormLabel, Heading, Input, useToast } from '@chakra-ui/react'\nimport { useApolloClient } from '@apollo/client'\nimport { useHistory } from 'react-router-dom'\nimport { SIGN_IN, } from '../graphql'\nimport { useCookies } from 'react-cookie'\n\nexport default function Login() {\n  const [formValue, setFormValue] = useState({})\n  const history = useHistory()\n  const [cookies, setCookie] = useCookies(['token'])\n\n  const toast = useToast()\n  const client = useApolloClient()\n\n  const handleChange = (e) => {\n    setFormValue({ ...formValue, [e.target.name]: e.target.value })\n  }\n\n  const onSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const signInResponse = await client.mutate({\n        mutation: SIGN_IN,\n        variables: {\n          data: formValue\n        }\n      })\n      if (signInResponse.data.signIn.success) {\n        setCookie('token', signInResponse.data.signIn.token)\n        toast({\n          title: signInResponse.data.signIn.message,\n          status: \"success\",\n          duration: 3000,\n        })\n        history.push('/')\n      } else {\n        toast({\n          title: signInResponse.data.signIn.message,\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        })\n      }\n    } catch (error) {\n      toast({\n        title: error.message || 'Something went wrong',\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      })\n    }\n  }\n\n  return (\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box mt={12} p={8} width=\"420px\" borderWidth={1} borderRadius={8} boxShadow=\"lg\">\n        <Box textAlign=\"center\">\n          <Heading>Login</Heading>\n        </Box>\n        <Box my={4} textAlign=\"left\">\n          <form onSubmit={onSubmit}>\n            <FormControl>\n              <FormLabel>User Name</FormLabel>\n              <Input required name=\"userName\" type=\"text\" placeholder=\"john.doe\" onChange={handleChange} />\n            </FormControl>\n            <FormControl mt={6}>\n              <FormLabel>Password</FormLabel>\n              <Input required name=\"password\" minLength=\"4\" type=\"password\" placeholder=\"*******\" onChange={handleChange} />\n            </FormControl>\n            <Button type=\"submit\" colorScheme=\"teal\" variant=\"outline\" width=\"full\" mt={4}>\n              Sign In\n            </Button>\n          </form>\n        </Box>\n      </Box>\n    </Flex>\n  )\n}\n","/Users/yash/node_workspace/mern-presentation/mern-frontend/src/pages/Home.js",[],"/Users/yash/node_workspace/mern-presentation/mern-frontend/src/pages/Signup.js",[],"/Users/yash/node_workspace/mern-presentation/mern-frontend/src/pages/Post.js",[],"/Users/yash/node_workspace/mern-presentation/mern-frontend/src/pages/CreatePost.js",[],"/Users/yash/node_workspace/mern-presentation/mern-frontend/src/components/PostItem.js",[],"/Users/yash/node_workspace/mern-presentation/mern-frontend/src/components/AppContext.js",[],"/Users/yash/node_workspace/mern-presentation/mern-frontend/src/components/Layout.js",[],"/Users/yash/node_workspace/mern-presentation/mern-frontend/src/pages/EditPost.js",["91"],"import React, { useContext, useState } from 'react'\nimport { Box, Button, Flex, FormControl, FormLabel, Heading, Input, Textarea, useToast } from '@chakra-ui/react'\nimport { useMutation, useQuery } from '@apollo/client'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { POST, UPDATE_POST } from '../graphql'\nimport { useCookies } from 'react-cookie'\nimport { AppContext } from '../components/AppContext'\n\nexport default function EditPost() {\n  const { state } = useContext(AppContext)\n  const [formValue, setFormValue] = useState({})\n  const [cookies] = useCookies(['token'])\n\n  const params = useParams()\n  const history = useHistory()\n  const { data: postData, loading } = useQuery(POST, {\n    variables: {\n      where: {\n        id: params.id\n      }\n    },\n    fetchPolicy: 'cache-and-network'\n  })\n\n  const toast = useToast()\n  const [updatePostMutation] = useMutation(UPDATE_POST)\n\n  const handleChange = (e) => {\n    setFormValue({ ...formValue, [e.target.name]: e.target.value })\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    updatePostMutation({\n      variables: {\n        where: {\n          id: postData.post.id\n        },\n        data: formValue\n      }\n    }).then(response => {\n      if (response.data.updatePost.success) {\n        toast({\n          title: response.data.updatePost.message,\n          status: \"success\",\n          duration: 3000,\n        })\n        history.push(`/post/${postData.post.id}`)\n      } else {\n        toast({\n          title: response.data.updatePost.message,\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n        })\n      }\n    })\n  }\n\n  return (\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box mt={12} p={8} width=\"80%\" borderWidth={1} borderRadius={8} boxShadow=\"lg\">\n        {loading ? <>Loading...</> :\n          <>\n            {state.user && state.user.id === postData.post.author.id ?\n              <><Box textAlign=\"center\">\n                <Heading>Edit Post</Heading>\n              </Box>\n                <Box my={4} textAlign=\"left\">\n                  <form onSubmit={onSubmit}>\n                    <FormControl>\n                      <FormLabel>Post Title</FormLabel>\n                      <Input defaultValue={postData.post.title} required name=\"title\" type=\"text\" placeholder=\"Post Title\" onChange={handleChange} />\n                    </FormControl>\n                    <FormControl mt={6}>\n                      <FormLabel>Post Content</FormLabel>\n                      <Textarea defaultValue={postData.post.content} required name=\"content\" rows={6} placeholder=\"Enter content here\" onChange={handleChange} />\n                    </FormControl>\n                    <Button colorScheme=\"teal\" variant=\"outline\" mt={4} onClick={() => history.push(`/post/${postData.post.id}`)}>\n                      Cancel\n                    </Button>\n                    {'   '}\n                    <Button type=\"submit\" colorScheme=\"teal\" variant=\"solid\" mt={4}>\n                      Update Post\n                    </Button>\n                  </form>\n                </Box>\n              </>\n              :\n              <Heading textAlign=\"center\">\n                Sorry, You are not authorized\n              </Heading>}\n          </>\n        }\n      </Box>\n    </Flex>\n\n  )\n\n  return cookies.token ?\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box mt={12} p={8} width=\"80%\" borderWidth={1} borderRadius={8} boxShadow=\"lg\">\n        <Box textAlign=\"center\">\n          <Heading>Create Post</Heading>\n        </Box>\n        <Box my={4} textAlign=\"left\">\n          <form onSubmit={onSubmit}>\n            <FormControl>\n              <FormLabel>Post Title</FormLabel>\n              <Input required name=\"title\" type=\"text\" placeholder=\"Post Title\" onChange={handleChange} />\n            </FormControl>\n            <FormControl mt={6}>\n              <FormLabel>Post Content</FormLabel>\n              <Textarea required name=\"content\" rows={6} placeholder=\"Enter content here\" onChange={handleChange} />\n            </FormControl>\n            <Button type=\"submit\" colorScheme=\"teal\" variant=\"outline\" mt={4}>\n              Create Post\n            </Button>\n          </form>\n        </Box>\n      </Box>\n    </Flex>\n    :\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box mt={12} p={8} width=\"80%\" borderWidth={1} borderRadius={8} boxShadow=\"lg\" textAlign=\"center\">\n        <Heading>\n          Sorry, You are not authorized\n        </Heading>\n      </Box>\n    </Flex>\n}\n",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"92","replacedBy":"96"},{"ruleId":"94","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":13,"column":10,"nodeType":"100","messageId":"101","endLine":13,"endColumn":17},{"ruleId":"98","severity":1,"message":"102","line":13,"column":19,"nodeType":"100","messageId":"101","endLine":13,"endColumn":28},{"ruleId":"98","severity":1,"message":"99","line":11,"column":10,"nodeType":"100","messageId":"101","endLine":11,"endColumn":17},{"ruleId":"103","severity":1,"message":"104","line":100,"column":3,"nodeType":"105","messageId":"106","endLine":130,"endColumn":12},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],["107"],["108"],"no-unused-vars","'cookies' is assigned a value but never used.","Identifier","unusedVar","'setCookie' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-global-assign","no-unsafe-negation"]